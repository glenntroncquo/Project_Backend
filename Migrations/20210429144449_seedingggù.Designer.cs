// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Backend.data;

namespace Project_Backend.Migrations
{
    [DbContext(typeof(ProjectBackendContext))]
    [Migration("20210429144449_seedingggù")]
    partial class seedingggù
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_Backend.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("3ac22041-3f85-40d7-9620-0a5f86981586"),
                            DepartmentName = "Weide"
                        },
                        new
                        {
                            DepartmentId = new Guid("2c52d3df-f4e7-493d-bde4-867bae00c460"),
                            DepartmentName = "Penta"
                        },
                        new
                        {
                            DepartmentId = new Guid("cf51e187-b796-49bf-83a9-586826584f39"),
                            DepartmentName = "Obeee"
                        });
                });

            modelBuilder.Entity("Project_Backend.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HireDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("bf2d081c-7247-4f44-8e35-3557d131ab9b"),
                            Age = 18,
                            Email = "johndoe@gmail.com",
                            FirstName = "John",
                            HireDate = "20/06/2015",
                            Name = "Doe",
                            PhoneNumber = 496054388
                        },
                        new
                        {
                            EmployeeId = new Guid("8594380c-fc31-458d-aac3-c247938f902f"),
                            Age = 18,
                            Email = "charliechoplin@gmail.com",
                            FirstName = "Charlie",
                            HireDate = "20/06/2015",
                            Name = "Choplin",
                            PhoneNumber = 496054388
                        },
                        new
                        {
                            EmployeeId = new Guid("d32df572-23ab-4516-b58b-5ba507a097e5"),
                            Age = 18,
                            Email = "rickertdemeester@gmail.com",
                            FirstName = "Rickert",
                            HireDate = "20/06/2015",
                            Name = "Demeester",
                            PhoneNumber = 496054388
                        });
                });

            modelBuilder.Entity("Project_Backend.Models.EmployeeProject", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeProject");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("1cd69d9b-c4b0-4afd-86f5-8dec5cd0f228"),
                            EmployeeId = new Guid("bf2d081c-7247-4f44-8e35-3557d131ab9b")
                        },
                        new
                        {
                            ProjectId = new Guid("53c29d7c-0fc5-4584-9359-58d7283b812b"),
                            EmployeeId = new Guid("bf2d081c-7247-4f44-8e35-3557d131ab9b")
                        },
                        new
                        {
                            ProjectId = new Guid("53c29d7c-0fc5-4584-9359-58d7283b812b"),
                            EmployeeId = new Guid("8594380c-fc31-458d-aac3-c247938f902f")
                        },
                        new
                        {
                            ProjectId = new Guid("0ae767ca-651c-415f-bf26-ca7b1306d9c4"),
                            EmployeeId = new Guid("d32df572-23ab-4516-b58b-5ba507a097e5")
                        });
                });

            modelBuilder.Entity("Project_Backend.Models.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationId = new Guid("e1c1bd35-a410-408b-82f0-4df8e66b681f"),
                            City = "Kortrijk",
                            DepartmentId = new Guid("3ac22041-3f85-40d7-9620-0a5f86981586"),
                            HouseNumber = 14,
                            PostalCode = 8000,
                            StreetName = "Kortrijkstraat"
                        },
                        new
                        {
                            LocationId = new Guid("92a99e7b-7ddb-417d-8510-9e4a33d863c6"),
                            City = "Kortrijk",
                            DepartmentId = new Guid("2c52d3df-f4e7-493d-bde4-867bae00c460"),
                            HouseNumber = 18,
                            PostalCode = 8000,
                            StreetName = "Kortrijkstraat"
                        },
                        new
                        {
                            LocationId = new Guid("c3f3b9b8-111a-4443-b980-b942dd2532ad"),
                            City = "Kortrijk",
                            DepartmentId = new Guid("cf51e187-b796-49bf-83a9-586826584f39"),
                            HouseNumber = 20,
                            PostalCode = 8000,
                            StreetName = "Kortrijkstraat"
                        });
                });

            modelBuilder.Entity("Project_Backend.Models.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("1cd69d9b-c4b0-4afd-86f5-8dec5cd0f228"),
                            Description = "Make a design",
                            ProjectName = "Design"
                        },
                        new
                        {
                            ProjectId = new Guid("53c29d7c-0fc5-4584-9359-58d7283b812b"),
                            Description = "Make a frontend",
                            ProjectName = "Frontend"
                        },
                        new
                        {
                            ProjectId = new Guid("0ae767ca-651c-415f-bf26-ca7b1306d9c4"),
                            Description = "Make a backend",
                            ProjectName = "Backend"
                        });
                });

            modelBuilder.Entity("Project_Backend.Models.EmployeeProject", b =>
                {
                    b.HasOne("Project_Backend.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Backend.Models.Project", "Project")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Project_Backend.Models.Location", b =>
                {
                    b.HasOne("Project_Backend.Models.Department", "Department")
                        .WithOne("Location")
                        .HasForeignKey("Project_Backend.Models.Location", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Project_Backend.Models.Department", b =>
                {
                    b.Navigation("Location");
                });

            modelBuilder.Entity("Project_Backend.Models.Project", b =>
                {
                    b.Navigation("EmployeeProject");
                });
#pragma warning restore 612, 618
        }
    }
}
